version: '3.9'

services:
  app:
    image: backend-engineering-case-study:1.0
    container_name: backend-engineering-case-study
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      mysqldb:
        condition: service_healthy
    ports:
      - '8080:8080'
    links:
      - redisdb
    # networks:
    #   - 'local-network'

  mysqldb:
    image: mysql:8.0.28-oracle
    container_name: mysqldb
    restart: always
    environment:
      MYSQL_DATABASE: 'mysql-db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    # networks:
    #   - 'local-network'
    ports:
      - '3306:3306'
    volumes:
      - case-mysql-data:/var/lib/case-mysqldb
      - ./mysql-db-dump.sql:/docker-entrypoint-initdb.d/mysql-db-dump.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mysqldb", "-u", "user", "-ppassword"]
      retries: 10

  redisdb: 
    image: redis:latest
    container_name: redisdb
    ports:
      - '6379:6379'
    # networks:
    #   - 'local-network'
    # command: redis-server --appendonly yes 

  frontend:
    build:
      context: ./fe_src
      dockerfile: Dockerfile
    container_name: leaderboard-frontend
    ports:
      - '3000:3000' # Expose on port 8081 to avoid conflict with backend
    # networks:
    #   - 'local-network'

volumes:
  case-mysql-data:


# networks:
#   local-network:
#     driver: bridge